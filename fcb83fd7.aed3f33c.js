(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{104:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return m}));var a=t(3),i=t(7),r=(t(0),t(111)),o={id:"fade-transition",title:"Scene Transitions: The Fade Transition",hide_title:!0,hide_table_of_contents:!1,sidebar_label:"The Fade Transition",custom_edit_url:null,keywords:["monogame tutorial","monogame framework","monogame","tutorial","scene transition","scene","scenes"],description:"A tutorial on creating scene transition effects in a MonoGame project.",image:"/img/mgb_cookie.svg",slug:"/tutorials/monogame-3-8/scene-transitions/fade-transition"},s={unversionedId:"tutorials/monogame-3-8/scene-transitions/fade-transition",id:"tutorials/monogame-3-8/scene-transitions/fade-transition",isDocsHomePage:!1,title:"Scene Transitions: The Fade Transition",description:"A tutorial on creating scene transition effects in a MonoGame project.",source:"@site/docs\\tutorials\\monogame-3-8\\scene-transitions\\06-fade-transition.md",slug:"/tutorials/monogame-3-8/scene-transitions/fade-transition",permalink:"/docs/tutorials/monogame-3-8/scene-transitions/fade-transition",editUrl:null,version:"current",lastUpdatedBy:"Christopher Whitley",lastUpdatedAt:1608636223,sidebar_label:"The Fade Transition",sidebar:"tutorials",previous:{title:"Scene Transitions: Updating Game1",permalink:"/docs/tutorials/monogame-3-8/scene-transitions/updating-game1"},next:{title:"Scene Transitions: The EvenOddTransition",permalink:"/docs/tutorials/monogame-3-8/scene-transitions/even-odd-transition"}},c=[{value:"Constructor",id:"constructor",children:[]},{value:"Render(SpriteBatch)",id:"renderspritebatch",children:[]},{value:"GetAlpha()",id:"getalpha",children:[]},{value:"Testing The Transition",id:"testing-the-transition",children:[]}],l={rightToc:c};function m(e){var n=e.components,o=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,o,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"the-fade-transition"},"The Fade Transition"),Object(r.b)("p",null,"The first transition effect we'll create is going to be the most command and simplest one of all, a fade effect.  This transition will simply fade out the current scene and then fade in the next one."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Perform the Following")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In the game project, reate a new class file called ",Object(r.b)("strong",{parentName:"p"},"FadeTransition.cs"),", then add the following code.  We'll go over the code in the sections below."),Object(r.b)("p",{parentName:"div"},Object(r.b)("strong",{parentName:"p"},"using statements")),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),"using Microsoft.Xna.Framework;\nusing Microsoft.Xna.Framework.Graphics;\nusing System;\n")),Object(r.b)("p",{parentName:"div"},Object(r.b)("strong",{parentName:"p"},"FadeTransition class")),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),'/// <summary>\n///     A transition that fades the scene out/in.\n/// </summary>\npublic class FadeTransition : Transition\n{\n    /// <summary>\n    ///     Creates a new FadeTransition instance.\n    /// </summary>\n    /// <param name="game">\n    ///     A reference to our Game instance.\n    /// </param>\n    /// <param name="transitionTime">\n    ///     The total amount of time the transition will take.\n    /// </param>\n    /// <param name="kind">\n    ///     The type of transition.\n    /// </param>\n    public FadeTransition(Game1 game, TimeSpan transitionTime, TransitionKind kind)\n        : base(game, transitionTime, kind) { }\n\n    /// <summary>\n    ///     Renders this transition.\n    /// </summary>\n    /// <param name="spriteBatch">\n    ///     The SpriteBatch instance used for rendering.\n    /// </param>\n    protected override void Render(SpriteBatch spriteBatch)\n    {\n        spriteBatch.Draw(texture: SourceTexture,\n                            destinationRectangle: SourceTexture.Bounds,\n                            sourceRectangle: SourceTexture.Bounds,\n                            color: Color.White * GetAlpha());\n    }\n\n    /// <summary>\n    ///     Gets the alpha value to use for the color mask when rendering.\n    /// </summary>\n    /// <returns>\n    ///     The value to use for the color mask alpha\n    /// </returns>\n    private float GetAlpha()\n    {\n        double timeLeft = TransitionTimeRemaining.TotalSeconds;\n\n        if (Kind == TransitionKind.Out)\n        {\n            return (float)(timeLeft / TransitionTime.TotalSeconds);\n        }\n        else\n        {\n            return (float)(1.0 - (timeLeft / TransitionTime.TotalSeconds));\n        }\n    }\n}\n')))),Object(r.b)("h3",{id:"constructor"},"Constructor"),Object(r.b)("p",null,"The constructor of our ",Object(r.b)("inlineCode",{parentName:"p"},"FadeTransition")," is pretty simple. "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),'/// <summary>\n///     Creates a new FadeTransition instance.\n/// </summary>\n/// <param name="game">\n///     A reference to our Game instance.\n/// </param>\n/// <param name="transitionTime">\n///     The total amount of time the transition will take.\n/// </param>\n/// <param name="kind">\n///     The type of transition.\n/// </param>\npublic FadeTransition(Game1 game, TimeSpan transitionTime, TransitionKind kind)\n    : base(game, transitionTime, kind) { }\n')),Object(r.b)("p",null,"It simply just takes in the required values of the base ",Object(r.b)("inlineCode",{parentName:"p"},"Transition")," constructor and then passes them along."),Object(r.b)("h3",{id:"renderspritebatch"},"Render(SpriteBatch)"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Render(SpriteBatch)")," method is rather simple as well."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),'/// <summary>\n///     Renders this transition.\n/// </summary>\n/// <param name="spriteBatch">\n///     The SpriteBatch instance used for rendering.\n/// </param>\nprotected override void Render(SpriteBatch spriteBatch)\n{\n    spriteBatch.Draw(texture: SourceTexture,\n                        destinationRectangle: SourceTexture.Bounds,\n                        sourceRectangle: SourceTexture.Bounds,\n                        color: Color.White * GetAlpha());\n}\n')),Object(r.b)("p",null,"All it does is render the source texture, but sets the color mask to ",Object(r.b)("inlineCode",{parentName:"p"},"Color.White * GetAlpha()"),".  By multiplying it by an alpha value, we can make the render of the texture transparent depending on the amount of alpha we apply."),Object(r.b)("h3",{id:"getalpha"},"GetAlpha()"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"GetAlpha()")," method is responsible for determining how much alpha to apply to the render."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),"/// <summary>\n///     Gets the alpha value to use for the color mask when rendering.\n/// </summary>\n/// <returns>\n///     The value to use for the color mask alpha\n/// </returns>\nprivate float GetAlpha()\n{\n    double timeLeft = TransitionTimeRemaining.TotalSeconds;\n\n    if (Kind == TransitionKind.Out)\n    {\n        return (float)(timeLeft / TransitionTime.TotalSeconds);\n    }\n    else\n    {\n        return (float)(1.0 - (timeLeft / TransitionTime.TotalSeconds));\n    }\n}\n")),Object(r.b)("p",null,"Depending on if the fade transition is fading in or out, we interpolate the alpha value between 0.0 and 1.0 based on the amount of time that is remaining for the transition."),Object(r.b)("h3",{id:"testing-the-transition"},"Testing The Transition"),Object(r.b)("p",null,"Now let's test the transition. "),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Perform the Following")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Open the ",Object(r.b)("strong",{parentName:"p"},"GreenCircleScene.cs")," class file and locate the ",Object(r.b)("inlineCode",{parentName:"p"},"Update(GameTime)")," method.  Change the method to the following."),Object(r.b)("pre",{parentName:"div"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),'/// <summary>\n///     Updates this scene.\n/// </summary>\n/// <param name="gameTime">\n///     A snapshot of the frame specific timing values.\n/// </param>\npublic override void Update(GameTime gameTime)\n{\n    if(_game.CurKeyboardState.IsKeyDown(Keys.Space) && _game.PrevKeyboardState.IsKeyUp(Keys.Space))\n    {\n        //  Tell the game to change to the OrangeCircleScene using the FadeTransition\n        _game.ChangeScene(new OrangeCircleScene(_game),\n                            new FadeTransition(_game, TimeSpan.FromSeconds(1), Transition.TransitionKind.Out),\n                            new FadeTransition(_game, TimeSpan.FromSeconds(1), Transition.TransitionKind.In));\n    }\n}\n')))),Object(r.b)("p",null,"We've updated it so that when we call ",Object(r.b)("inlineCode",{parentName:"p"},"_game.ChangeScene")," we are now using the ",Object(r.b)("inlineCode",{parentName:"p"},"(Scene, Transition Transition)")," overload.  We pass to it a new ",Object(r.b)("inlineCode",{parentName:"p"},"OrangeCircleScene")," instance, a ",Object(r.b)("inlineCode",{parentName:"p"},"FadeTransition")," instance that is fading out and a ",Object(r.b)("inlineCode",{parentName:"p"},"FadeTransition")," instance that is fading in."),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Perform the Following")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Next, open the ",Object(r.b)("strong",{parentName:"p"},"OrangeCircleScene.cs")," class file and make the same change to it's ",Object(r.b)("inlineCode",{parentName:"p"},"Update(GameTime)")," method as we did above to. Only for this one, make sure we are changing to the ",Object(r.b)("inlineCode",{parentName:"p"},"GreenCircleScene")," instead."))),Object(r.b)("p",null,"If you run the game now, you should see the green circle scene first. Then if you press the space key to change scenes, the green circle scene will fade out, then the orange circle scene will fade in.  It's magic!!!"),Object(r.b)("p",null,Object(r.b)("img",{src:t(147).default})),Object(r.b)("p",null,"The fade transition effect is nice and all, but we can create something even fancier.  In the next page of this tutorial, we'll create the even-odd tile transition effect."))}m.isMDXComponent=!0},111:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return u}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),m=function(e){var n=i.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=m(e.components);return i.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},b=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=m(t),b=a,u=p["".concat(o,".").concat(b)]||p[b]||d[b]||r;return t?i.a.createElement(u,s(s({ref:n},l),{},{components:t})):i.a.createElement(u,s({ref:n},l))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=b;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},147:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/fade-transition-fda7ea07dc4401938f3f89616a0054fa.gif"}}]);